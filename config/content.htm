<h1>50733121期中報告</h1>
<p>content 1</p>
<p>我第一個javascript程式</p>
<p></p>
<div>
<div class="syntaxhighlighter html" id="highlighter_907551">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">&lt;</code><code class="html keyword">p</code><code class="html plain">&gt;&lt;</code><code class="html keyword">button</code> <code class="html color1">onclick</code><code class="html plain">=</code><code class="html string">"myFunction()"</code><code class="html plain">&gt;Try it&lt;/</code><code class="html keyword">button</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
<div class="line number2 index1 alt1"><code class="html plain">&lt;</code><code class="html keyword">p</code> <code class="html color1">id</code><code class="html plain">=</code><code class="html string">"demo"</code><code class="html plain">&gt;&lt;/</code><code class="html keyword">p</code><code class="html plain">&gt;</code></div>
<div class="line number3 index2 alt2"><code class="html plain">&lt;</code><code class="html keyword">script</code><code class="html plain">&gt;// </code></div>
<div class="line number4 index3 alt1"><code class="html color2">function myFunction() {</code></div>
<div class="line number5 index4 alt2"><code class="html spaces">  </code><code class="html color2">document.getElementById("demo").innerHTML = Math.floor(Math.random()*10);</code></div>
<div class="line number6 index5 alt1"><code class="html color2">}</code></div>
<div class="line number7 index6 alt2"><code class="html plain">&lt;/</code><code class="html keyword">script</code><code class="html plain">&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p></p>
<div class="line number1 index0 alt2"><code class="html plain"></code></div>
<p><button onclick="myFunction()">摸一下</button></p>
<p id="demo"></p>
<p></p>
<p><a href="https://www.youtube.com/watch?v=FXoxbXuQ3G8">https://www.youtube.com/watch?v=FXoxbXuQ3G8</a></p>
<script>// <![CDATA[
// <![CDAIA[
function myFunction(){
  document.getElementById("demo").innerHTML =Math.floor(Math.random()*50+1);
  //document.getElementById("demo").innerHTML ="不要亂按";
  //alert("不要亂摸");
}
// ]]></script>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="691" src="https://www.youtube.com/embed/FXoxbXuQ3G8" width="1106"></iframe></p><h1>50733121期末報告</h1>
<p><span>50733121 近端配置管理</span><br/><span>windows network setting</span><br/><img alt="" height="386" src="/images/rundll32_T5m6VaAcR6.png" width="443"/><br/><span>chrome proxy</span><br/><br/><span>firefox proxy</span><br/><br/><span>mde.tw</span><br/><br/><span>github.com</span></p>
<p><img caption="false" height="281" src="/images/chrome_9khFM4bQB2.png" width="550"/><br/><br/><span>portable programming system</span><br/><br/><span>portablegit - remove helper = manager</span><br/><br/><span>login github add repository - README.md</span></p>
<p><img caption="false" height="268" src="/images/chrome_2019-05-28_19-20-50.png" width="550"/><br/><br/><span>git clone self-repo and CMSimfly</span><br/><br/><span>y:\home\.gitconfig</span><br/><br/><span>git config --global user.name"50733121"</span><br/><br/><span>git config --global user.email"50733121@gm.nfu.edu.tw"</span><br/><br/><span>git config --global http.proxy </span><a data-lynx-mode="hover" data-lynx-uri="https://l.facebook.com/l.php?u=http%3A%2F%2F140.130.17.3%3A3128%2F%3Ffbclid%3DIwAR2XxH_f2YV-lPrsPhjr6aLwG7N1DD6BOT3X69vCRQS3VS1eD8Ow_iZpjwU&amp;h=AT2gfd2Si3QHIQ41E_U0pIVhMOwq2PIwu-g2kz1wQPyXVkxPbSlg0IC2DlaUAxfCEt7GQxgV0qJmqL7CsWVwSoD32nKBJpZMwTilXib6KDXsLrHijESNSZnxufA42K5aV7vLIN-zaByL_-7SSMlXvw" href="http://140.130.17.3:3128/?fbclid=IwAR2XxH_f2YV-lPrsPhjr6aLwG7N1DD6BOT3X69vCRQS3VS1eD8Ow_iZpjwU" rel="nofollow noopener" target="_blank">http://140.130.17.4:3128</a><br/><br/><span>使用git add .進行拍快照</span></p>
<p><img caption="false" height="276" src="/images/cmd_UrL8Dc086W.png" width="550"/><br/><br/><span>git commit -m"commit description"</span><br/><br/><span>git push Github Pages - setting,url</span><br/><br/><span>使用python wsgi.py進入自己的動態網站</span></p>
<p><span><img caption="false" height="288" src="/images/cmd_2019-05-28_18-59-00.png" width="550"/></span></p>
<h2>關於github</h2><h2>近端管理與配置</h2>
<p>先確認是否有連到網路</p><h1>學習概述</h1>
<ol>
<li><span>是否已經在自己的隨身碟建立隨身程式系統?</span><br/><br/><span>此一隨身系統以</span><a href="https://drive.google.com/open?id=1_TQBw1PM7jxrmtsBjvLKbjJWfGs8Ug79"><span> </span>2019_cdb_w5.7z</a><span><span> </span>為基礎, 使用者必須會自行查驗</span><br/><br/><span>    是否已經將 portablegit 中的 helper = manager 的設定移除?</span><br/><span>     python 是否已經安裝 flask, bs4 與 lxml 模組?</span><br/><span>    是否了解 git 以 https 連線時, proxy 將採用那一個檔案中的設定?</span><br/><span>    是否已經學會如何採用 ssh 模式維護 github 上的倉儲?</span><br/><span>    是否了解 CMSimfly 動態與靜態系統之間的關係?</span><br/><span>    是否會在 CMSimfly 中上傳檔案, 引用檔案?</span><br/><span>    是否會在 CMsimfly 中上傳圖檔, 引用圖檔?</span><br/><span>    是否會在 CMSimfly 中嵌入 Youtube 影片?</span><br/><span>    是否會在 CMSimfly 頁面中加入 Javascript 互動程式?</span><br/><br/><span>W14 -&gt; 所完成的隨身示範系統為 </span><a href="https://drive.google.com/file/d/12IOfTpupXL0czFM_ZeHt-6sxfXwZK6ai/view?usp=sharing">2019_cdb_w13.7z</a><span> (s1 Fossil SCM 的 doc 為: </span><a href="https://s1.mde.nfu.edu.tw:5443/kmol2019/doc/trunk/index.html">https://s1.mde.nfu.edu.tw:5443/kmol2019/doc/trunk/index.html</a><span>, Github 倉儲為: </span><a href="https://github.com/scrum-4/2019wcmj">https://github.com/scrum-4/2019wcmj</a><span>, Github Pages 網頁為: </span><a href="https://scrum-4.github.io/2019wcmj/">https://scrum-4.github.io/2019wcmj/</a><span>)</span><br/><br/><span>    是否會更改 CMsimfly 靜態系統所使用的模板?</span><br/><span>    是否能將 USB 隨身碟格式為 NTFS 或 extFAT, 以便放入 Ubuntu 虛擬主機檔案?</span><br/><span>    是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 Fossil SCM 來伺服靜態 CMSimfly 檔案?</span><br/><span>    是否會使用自己隨身碟中的 Virtualbox 與 Ubuntu 中的 uwsgi 來伺服動態 CMSimfly 系統?</span><br/><br/><span>2. 是否已經根據各上述階段任務的操作拍成說明影片, 嵌入自己的 Github Pages 網站?</span><br/><br/><span>3. 是否已經著手執行各學員的期末專案, 是否了解各學員的期末報告, 必須同時呈現 html 與 pdf 版本.</span><br/><br/><span>各學員繳交供評分之內容: 個人倉儲 Github Pages 網站及 pdf 格式之期末報告.</span><span></span></li>
<li>
<h2>倉儲改版</h2>
<p>建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版<br/><br/>可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令.<br/><br/>建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版.<br/><br/>另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端.<br/><br/>git add<br/><br/>git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容.<br/><br/>git add 在 GIT 架構下, 是對所新增或修改的內容拍快照:<br/><br/>git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add<br/><br/>git commit<span> </span><br/><br/>git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間.<br/><br/>當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息.<br/><br/>git push<br/><br/>git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.</p>
<span><span><br/><br/><span>靜態 CMSimfly</span></span></span>
<p>利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站<br/><br/>設法利用<span> </span><a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%B8%89.html">HTML5 CSS 與 Javascript</a>, 納入與機械設計相關的靜態網頁內容</p>
</li>
<li></li>
</ol><h2>配置可攜程式環境</h2>
<p>取得 Windows 10 64 位元環境下的可攜程式環境 (下載  2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟.<br/><br/>以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出.<br/><br/>了解基本的 DOS (Disk Operating System) 指令<br/><br/>C:\&gt; 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為<br/><br/>Y:\&gt;<br/><br/>若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如:<br/><br/>Y:\&gt;cd tmp<br/><br/>表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是<br/><br/>Y:\tmp&gt;<br/><br/>若要再回到 Y 槽的根目錄, 可以使用 cd ..<br/><br/>表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄.<br/><br/>另外, 無論目前位於哪一個子目錄, 也可以使用 cd \<br/><br/>直接回到根目錄.<br/><br/>或者從 Y:\&gt; 直接使用<br/><br/>cd \tmp\repo\ssh\wcm2019<br/><br/>直接從 Y 槽的根目錄, 跳進 Y:\tmp\repo\ssh\wcm2019&gt;<br/><br/>此外, 常用的 DOS 指令有:<br/><br/>dir - 列出目前所在目錄的內容<br/><br/>mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄<br/><br/>cls - clear screen, 清除目前的命令列顯示的內容<br/><br/></p>
<h2>網路連線設定</h2>
<p>了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定.<br/><br/>正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定.<br/><br/>瀏覽器代理主機設定<br/><br/>了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定.<br/><br/>申請 Github 帳號<br/><br/>利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲.</p>
<h1>骰子</h1>
<script type="text/javascript">// <![CDATA[
var cwidth = 400;
    var cheight = 300;
    var dicex = 50;
    var dicey = 50;
    var dicewidth = 100;
    var diceheight = 100;
    var dotrad = 6;
    var ctx;
    var dx;
    var dy;
    var firstturn = true;
    var point;
function throwdice() {
    var sum;
    var ch = 1+Math.floor(Math.random()*6);
    sum = ch;
    dx = dicex;
    dy = dicey;
    drawface(ch);
    dx = dicex + 150;
    ch=1 + Math.floor(Math.random()*6);
    sum += ch;
    drawface(ch);
    if (firstturn) {
        switch(sum) {
            case 7:
            case 11:
              document.f.outcome.value="You win!";
              break;
            case 2:
            case 3:
            case 12:
              document.f.outcome.value="You lose!";
              break;
            default:
              point = sum;
              document.f.pv.value=point;
              firstturn = false;
              document.f.stage.value="Need follow-up throw.";
              document.f.outcome.value="   ";
        }
    }
    else {
        switch(sum) {
        case point:
           document.f.outcome.value="You win!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
           break;
        case 7:
           document.f.outcome.value="You lose!";
           document.f.stage.value="Back to first throw.";
           document.f.pv.value=" ";
           firstturn = true;
        }
            }
}
function drawface(n) {
  ctx = document.getElementById('canvas').getContext('2d');  
  ctx.lineWidth = 5;
  ctx.clearRect(dx,dy,dicewidth,diceheight);
  ctx.strokeRect(dx,dy,dicewidth,diceheight)
  var dotx;
  var doty;
  ctx.fillStyle = "#009966";
    switch(n) {
        case 1:
         draw1();
         break;
        case 2:
         draw2();
         break;
        case 3:
         draw2();
         draw1();
         break;
        case 4:
         draw4();
         break;
        case 5:
         draw4();
         draw1();
         break;
        case 6:
         draw4();
         draw2mid();
         break;
         
    }
}
function draw1() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + .5*dicewidth;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw2() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
function draw4() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+diceheight-3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + diceheight-3*dotrad;  //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy+ 3*dotrad;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill(); 
}
function draw2mid() {
    var dotx;
    var doty;
    ctx.beginPath();
    dotx = dx + 3*dotrad;
    doty = dy + .5*diceheight;
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    dotx = dx+dicewidth-3*dotrad;
    doty = dy + .5*diceheight; //no change
    ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);
    ctx.closePath();
    ctx.fill();
}
// ]]></script>
<p><canvas height="300" id="canvas" width="400"> Your browser doesn't support the HTML5 element canvas. </canvas> <br/> <button onclick="throwdice();">Throw dice </button></p>
<form id="f" name="f">Stage: <input name="stage" type="text" value="First Throw"/> Point: <input name="pv" type="text" value="   "/> Outcome: <input name="outcome" type="text" value="     "/></form>
<h1>ROC Flag</h1>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<!-- 導入 Brython 標準程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<p></p>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
</script>
<p><canvas height="400" id="plotarea2" width="600"></canvas></p>
<script type="text/python">
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea2"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(300, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
</script>
<h1>虎科VPN</h1>
<p><span><strong>1. 首次使用須先安裝SSL VPN 程式(Juniper Networks Connect)</strong></span></p>
<p><span>(1)請依您的作業系統版本下載使用者端程式：<a href="https://drive.narlabs.org.tw/navigate/s/8F663EC143514CF295FCB53B5B228956GUY">連結</a></span></p>
<p><span>(2)程式下載完成後，點擊兩下開始安裝。</span><br/><span>   <img alt=" archive 3629 d5014af5" src="https://nfucc.nfu.edu.tw/images/image/-archive-3629_d5014af5.png"/></span></p>
<p><span>   </span></p>
<hr size="2" width="100%"/>
<div><span><strong>2. </strong><strong>進行身份驗證(可由Juniper Network Connect或IE，請擇一進行身分認證)</strong></span></div>
<div><span></span></div>
<div><span>2-1: Juniper Network Connect 應用程式認證</span></div>
<blockquote>
<div>
<p><span>1."點選搜尋" &gt; 輸入程式名稱為Network Connect&gt; 點擊Network Connect</span></p>
<p><span><img alt="5" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/5.jpg"/></span></p>
<p><span>2.執行程式後，於"登入頁面"輸入網址 :<span> </span><a href="https://sslvpn.nfu.edu.tw/nfu">https://sslvpn9.twaren.net/nfu</a><span> </span>，後按下"執行"</span></p>
<p><span><img alt="1" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/1.jpg"/></span></p>
<p><span>3.輸入使用者帳號密碼，請填入校務行政AD帳號及密碼。請完整填寫您在校務行政AD帳號以及密碼，否則國網中心找不到對象進行身份確認<span> </span></span><br/><span>！(例: 員工編號或學號@ctx10.nfu.edu.tw）</span></p>
<p><img alt="1" height="430" src="https://nfucc.nfu.edu.tw/images/1.PNG" width="472"/></p>
<p>(以下為舊版本的登入畫面)</p>
<p><span><img alt="2" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/2.jpg"/></span></p>
<p></p>
<p><span>4.出現"設定控制-警告"視窗，按下"是"</span></p>
<p><span><img alt="3" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/3.jpg"/></span></p>
</div>
</blockquote>
<div>
<p><span>             5.螢幕右下角顯示"已連接"，表示已成功連線。</span></p>
<p><span>             <img alt="4" src="https://nfucc.nfu.edu.tw/images/image/sslvpn/4.jpg"/></span></p>
</div>
<h1>虛擬主機</h1>
<p><span>利用 Virtualbox 建立虛擬 Ubuntu 18.04 網際內容管理系統伺服主機:</span><br/><span><br/></span><span>1. 安裝最新版的 Virtualbox</span><br/><span>2. 建立 Ubuntu 18.04 虛擬主機</span><br/><span>3. 以網路卡橋接啟動 Ubuntu 伺服器</span></p>
<p><img caption="false" height="344" src="/images/VirtualBox_2019-05-28_20-30-59.png" width="550"/><br/><span>4. 以 sudo apt install nginx 安裝 nginx WWW 伺服器</span></p>
<p><img caption="false" height="462" src="/images/VirtualBox_2019-05-28_20-31-28.png" width="550"/><br/><span>5. 以 ifconfig 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線</span></p>
<p><img caption="false" height="462" src="/images/VirtualBox_2019-05-28_20-31-52.png" width="550"/><br/><span>6. 以 Windows 10  下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu</span></p>
<p><img caption="false" height="437" src="/images/filezilla_2019-05-28_20-35-26.png" width="550"/><br/><span>7. 利用 Ubuntu 指令將設定檔案搬至設定位置後, 以 /etc/init.d/nginx restart 重新啟動 nginx</span><br/><span>8. 在 Ubuntu 中以 sudo apt install uwsgi 安裝 uwsgi</span><br/><span>9. 在 Windows 10 編輯 uwsgi 與 nginx 所需的設定檔案, 完成後以 filezilla 送至 Ubuntu.</span><br/><span>10. 將 CMSimfly 程式碼送到 Ubuntu 伺服器中對應目錄後.</span><br/><span>11. 在 Ubuntu 建立 cmsimfly 服務, 並設定隨機啟動.</span><br/><span>12. 完成後, 在 Windows 10 以瀏覽器連線至 CMSimfly, 確認動態網頁與靜態網頁可以在虛擬主機中正常啟動.</span></p>
<p><span><img caption="false" height="331" src="/images/chrome_alEHRe2uQg.png" width="550"/></span></p>